#based on (problems) https://gist.github.com/pksunkara/988716
#most of what I changed was copied from stackoverflow, in some cases sources are noted in comments

[user]
	name = Mateusz Konieczny
	email = matkoniecz@gmail.com
[credential "https://github.com"]
	username = mkoniecz
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[alias]
   a = add
	aa = add -u .
   aaa = add --all
	ai = add -i
	#############
	#ap = apply
	#as = apply --stat
	#ac = apply --check
	#############
	#ama = am --abort
	#amr = am --resolved
	#ams = am --skip
	#############
	b = branch
	ba = branch -a #option -a shows both local and remote branches
	bd = branch -d
	br = branch -r #Option -r causes the remote-tracking branches to be listed
	#############
	c = commit -m
	caa = commit -a
	#cem = commit --allow-empty -m
	#cam = commit -am
	ca = commit --amend
	caa = commit --amend --no-edit
	#cad = commit -a --amend
	#ced = commit --allow-empty --amend
	cp = cherry-pick
	#############
	d = diff --find-renames
	dc = diff --cached --find-renames
	dl = difftool
	dlc = difftool --cached
	#dp = diff --patience
	#############
	f = fetch --prune
	fo = fetch origin --prune
	fu = fetch upstream --prune
	#############
	#fp = format-patch
	#############
	#fk = fsck
	#############
	#g = grep -p
	#############
	i = "!git init; git commit --allow-empty -m \"empty initial commit\""
	#############
	i = "!git init; git commit --allow-empty -m \"empty initial commit\""
	orphan = "!gitk --all --date-order `git reflog | cut -c1-7`"
	#############
	#from https://coderwall.com/p/euwpig/a-better-git-log
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --decorate --all -n 10
	lf = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --decorate --all
	ll = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --decorate --all
	ls = log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s" #http://stackoverflow.com/a/1838938/4130619
	ls = log --oneline
	#############
	#ls = ls-files
	#lsf = "!git ls-files | grep -i"
	#############
	m = merge
	mum = "!git fetch upstream; git checkout master; git merge upstream/master; git push" 
	#ma = merge --abort
	#mc = merge --continue
	#ms = merge --skip
	#############
	o = checkout
	om = checkout master
	ob = checkout -b
	#############
	ps = push
	psf = push -f #-force
	psu = push --set-upstream #-u
	pso = push origin
	#psao = push --all origin
	#psfo = push -f origin
	#psuo = push -u origin
	#psom = push origin master
	#psfom = push -f origin master
	#psuom = push -u origin master
	#############
	pl = pull
	#plo = pull origin
	plu = pull upstream
	#plom = pull origin master
	#plpm = pull upstream master
	#############
	#pb = pull --rebase
	#pbo = pull --rebase origin
	#pbp = pull --rebase upstream
	#pbom = pull --rebase origin master
	#pbpm = pull --rebase upstream master
	#############
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbs = rebase --skip
	#############
	re = reset
	#rh = reset HEAD
	reh = reset --hard
	#rem = reset --mixed
	#res = reset --soft
	#rehh = reset --hard HEAD
	#remh = reset --mixed HEAD
	#resh = reset --soft HEAD
	#############
	#r = remote
	#ra = remote add
	#rr = remote rm
	#rv = remote -v
	#rp = remote prune
	#rs = remote show
	#rao = remote add origin
	rso = remote show origin
	#rpo = remote prune origin
	#############
	sf = status
	s = status -s -b
	#############
	#sa = stash apply
	#sc = stash clear
	#sd = stash drop
	#sl = stash list
	#sp = stash pop
	#ss = stash save
	#sw = stash show
	#############
	t = for-each-ref --format '%(refname) %09 %(taggerdate) %(subject) %(taggeremail)' refs/tags  --sort=taggerdate
	#############
	#w = show
	#wp = show -p
	#wr = show -p --no-color
	#############
	#assume = update-index --assume-unchanged
	#unassume = update-index --no-assume-unchanged
	#assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	#unassumeall = !git assumed | xargs git update-index --no-assume-unchanged
	#assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	#############
	#ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	#theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	#############
	#whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	#whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
	#############
	#barebranch = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
	#flat = clone --depth 1
	#subpull = !git submodule foreach git pull --tags origin master
	#subrepo = !sh -c 'filter-branch --prune-empty --subdirectory-filter $1 master' -
	#human = name-rev --name-only --refs=refs/heads/*
	#serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	#snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
[diff]
	tool = meld
[difftool]
	prompt = false
[push]
	default = current
[credential]
	helper = cache --timeout=360000
[core]
	quotepath = false #properly display UTF filenames
	editor = /opt/sublime_text/sublime_text --wait
